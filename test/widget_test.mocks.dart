// Mocks generated by Mockito 5.3.0 from annotations
// in yaru/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dbus/dbus.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:xdg_desktop_portal/src/xdg_settings_portal.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDBusValue_0 extends _i1.SmartFake implements _i2.DBusValue {
  _FakeDBusValue_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [XdgSettingsPortal].
///
/// See the documentation for Mockito's code generation for more information.
class MockXdgSettingsPortal extends _i1.Mock implements _i3.XdgSettingsPortal {
  MockXdgSettingsPortal() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<_i3.XdgSettingChangeEvent> get settingChanged =>
      (super.noSuchMethod(Invocation.getter(#settingChanged),
              returnValue: _i4.Stream<_i3.XdgSettingChangeEvent>.empty())
          as _i4.Stream<_i3.XdgSettingChangeEvent>);
  @override
  _i4.Future<int> getVersion() =>
      (super.noSuchMethod(Invocation.method(#getVersion, []),
          returnValue: _i4.Future<int>.value(0)) as _i4.Future<int>);
  @override
  _i4.Future<_i2.DBusValue> read(String? namespace, String? key) =>
      (super.noSuchMethod(Invocation.method(#read, [namespace, key]),
              returnValue: _i4.Future<_i2.DBusValue>.value(_FakeDBusValue_0(
                  this, Invocation.method(#read, [namespace, key]))))
          as _i4.Future<_i2.DBusValue>);
  @override
  _i4.Future<Map<String, Map<String, _i2.DBusValue>>> readAll(
          Iterable<String>? namespaces) =>
      (super.noSuchMethod(Invocation.method(#readAll, [namespaces]),
              returnValue:
                  _i4.Future<Map<String, Map<String, _i2.DBusValue>>>.value(
                      <String, Map<String, _i2.DBusValue>>{}))
          as _i4.Future<Map<String, Map<String, _i2.DBusValue>>>);
}
